1)pattern 
#include<stdio.h>
int main()
{
	int i,j,r;
	printf("enter the number of rows:");
	scanf("%d",&r);
	for(i=0;i<=r;i++)
	{
		for(j=0;j<i;j++)
		{
			printf("%d",j+1);
		}
		printf("\n");
	}
}

2)reverse and palindrome
#include<stdio.h>
#include<string.h>
int main()
{
	int num,r,rev=0,rem,n;
	printf("enter the number:");
	scanf("%d",&n);
	r=n;
	while(r!=0)
	{
		rem=r%10;
		rev=rev*10+rem;
		r=r/10;
	}
	printf("reversed number=%d",rev);
	if(rev==n)
	{
		printf("\nits a palindrome");
	}
	else
	{
		printf("\nits a not palindrome");
	}
	
}


3)linear search
#include<stdio.h>
int linearsearch(int arr[],int size,int key)
{
	int position=-1,i;
	for(i=0;i<size;i++)
	{
		if(arr[i]==key){
		position = i;
		break;
	}
	}

}
int main()
{
	int a[]={1,2,3,4,5,6};
	int size= sizeof(a)/sizeof(a[0]);
	int key = 3;
	int pos=linearsearch(a,size,key)	;
	printf("element found in position:%d",pos);
}



4)gcd

#include<stdio.h>
int hcf(int n1,int n2);
int main()
{
	int n1,n2;
	printf("enter the two numbers:");
	scanf("%d %d",&n1,&n2);
	printf("GCD of %d and %d is %d",n1,n2,hcf(n1,n2));
}
int hcf(int n1,int n2)
{
	if(n2!=0)
		return hcf(n2,n1%n2);
	else
		return n1;	
}


5)pascal triangle
#include<stdio.h>
int main()
{
	int i,line,space,n;
	printf("enter the no of lines:");
	scanf("%d",&n);
	for ( line = 1; line <= n; line++) {
        for ( space = 1; space <= n - line; space++)
            printf("  ");
        int coef = 1;
        for ( i = 1; i <= line; i++) {
            printf("%4d", coef);
            coef = coef * (line - i) / i;
        }
        printf("\n");
    }
}

6)perfect number
#include<stdio.h>
int main()
{
	int n,i,result=0;
	printf("enter the number:");
	scanf("%d",&n);
	for(i=1;i<=n;i++)
	{
		if(n%i==0)
			result=result+i;
	}
	if(result==2*n)
		printf("true");
	else
		printf("false");
}


7)string palindrome
#include<stdio.h>
#include<string.h>
int main()
{
	int h,l;
	char s[]={"noon"};
	l=0;
	h= strlen(s)-1;
	while(h>l)
	{
		if(s[l++]!=s[h--]){
			printf("%s is not a palindrome",s);
			return 0;}
	}
	printf("%s is a palindrome",s);
	return 0;
}


8)factorial of a number
#include <stdio.h>
#include <string.h>

int main()
{
	int i,n,fact;
	printf("enter the number:");
	scanf("%d",&n);
	for(i=1;i<=n;i++)
	{
		fact=fact*i;
	}
	printf("factorial of the number is:%d",fact);
}


9)binomial coefficient
#include <stdio.h>
#include <string.h>

int fact(int n)
{
	int i,fact;
	for(i=1;i<=n;i++)
	{
		fact=fact*i;
	}
}
int main()
{
	int a,b,c,d,e,m,k;
	printf("enter the n value:");
	scanf("%d",&m);
	printf("enter the k value:");
	scanf("%d",&k);
	a=fact(m);
	b=fact(k);
	c=m-k;
	d=fact(c);
	e=a/b*d;
	printf("binomial coefficient is %d",e);
}


10)knapsack using greedy
#include <stdio.h>
int max(int a, int b) { return (a > b) ? a : b; }
int knapSack(int W, int wt[], int val[], int n)
{
	if (n == 0 || W == 0)
		return 0;
	if (wt[n - 1] > W)
		return knapSack(W, wt, val, n - 1);
	else
		return max(
			val[n - 1]
				+ knapSack(W - wt[n - 1], wt, val, n - 1),
			knapSack(W, wt, val, n - 1));
}
int main()
{
	int profit[] = { 60, 100, 120 };
	int weight[] = { 10, 20, 30 };
	int W = 50;
	int n = sizeof(profit) / sizeof(profit[0]);
	printf("%d", knapSack(W, weight, profit, n));
	return 0;
}


11)bubble sort

#include<stdio.h>
int bubblesort(int arr[],int n)
{
	int temp,i,j;
	for(i=0;i<n-1;i++)
	{
	
		for(j=0;j<n-i-1;j++)
		{
			if(arr[j]>arr[j+1])
			{
				temp=arr[j];
				arr[j]=arr[j+1];
				arr[j+1]=temp;
			}
		}
	}
}
int main()
{
	int n,i;
	printf("enter the number of elements:");
	scanf("%d",&n);
	int arr[n];
	printf("enter the %d elements:\n",n);
	for(i=0;i<n;i++)
	{
		
		scanf("%d",&arr[i]);
	}
	bubblesort(arr,n);
	printf("the sorted array is:");
	for(i=0;i<n;i++)
	{
		printf(" %d  ",arr[i]);
	}
}

12)armstrong number

#include <stdio.h>
int main() {
    int n, n1, rem, result = 0;
    printf("Enter a integer: ");
    scanf("%d", &n);
    n1=n;

    while (n1 != 0) {
        rem = n1 % 10;
        
       result += rem * rem * rem ;
       n1 /= 10;
    }

    if (result == n)
        printf("%d is an Armstrong number.", n);
    else
        printf("%d is not an Armstrong number.", n);

    return 0;
}



13)permutation

#include <stdio.h>
#include <string.h>
void swap(char* x, char* y)
{
	char temp;
	temp = *x;
	*x = *y;
	*y = temp;
}
void permute(char* a, int l, int r)
{
	int i;
	if (l == r)
		printf("%s\n", a);
	else {
		for (i = l; i <= r; i++) {
			swap((a + l), (a + i));
			permute(a, l + 1, r);
			swap((a + l), (a + i)); 
		}
	}
}
int main()
{
	char str[] = "123";
	int n = strlen(str);
	permute(str, 0, n - 1);
	return 0;
}



14)
